[HttpPost]
[Consumes("multipart/form-data")]
public async Task<IActionResult> AddProduct([FromForm] IFormFile productImage, [FromForm] Product product)
{
    if (productImage == null || product == null)
    {
        return BadRequest();
    }

    try
    {
        using (var memoryStream = new MemoryStream())
        {
            await productImage.CopyToAsync(memoryStream);
            product.ImageData = memoryStream.ToArray();
        }

        await _productRepo.AddProduct(product);
        return Created($"api/product/{product.ProductId}", product);
    }
    catch (Exception ex)
    {
        return StatusCode(500, ex.Message);
    }
}


import React, { useState, useEffect } from 'react';
import axios from 'axios';

function AddProduct() {
    const [productName, setProductName] = useState('');
    const [description, setDescription] = useState('');
    const [price, setPrice] = useState('');
    const [categoryId, setCategoryId] = useState('');
    const [imageFile, setImageFile] = useState(null);
    const [categories, setCategories] = useState([]);

    useEffect(() => {
        // Fetch categories from the server
        const fetchCategories = async () => {
            try {
                const response = await axios.get('http://localhost:5183/api/Category');
                setCategories(response.data);
            } catch (error) {
                console.error('Error fetching categories:', error);
            }
        };

        fetchCategories();
    }, []);

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const formData = new FormData();
            formData.append('productImage', imageFile);
            formData.append('productName', productName);
            formData.append('description', description);
            formData.append('price', price);
            formData.append('categoryId', categoryId);

            await axios.post('http://localhost:5183/api/Product', formData, {
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            });

            // Clear form after successful submission
            setProductName('');
            setDescription('');
            setPrice('');
            setCategoryId('');
            setImageFile(null);
        } catch (error) {
            console.error('Error adding product:', error);
        }
    };

    return (
        <div className="container mt-5">
            <h2>Add Product</h2>
            <form onSubmit={handleSubmit}>
                <div className="form-group">
                    <label>Product Name:</label>
                    <input type="text" className="form-control" value={productName} onChange={(e) => setProductName(e.target.value)} required />
                </div>
                <div className="form-group">
                    <label>Description:</label>
                    <textarea className="form-control" value={description} onChange={(e) => setDescription(e.target.value)} required />
                </div>
                <div className="form-group">
                    <label>Price:</label>
                    <input type="number" className="form-control" value={price} onChange={(e) => setPrice(e.target.value)} required />
                </div>
                <div className="form-group">
                    <label>Category:</label>
                    <select className="form-control" value={categoryId} onChange={(e) => setCategoryId(e.target.value)} required>
                        <option value="">Select category...</option>
                        {categories.map(category => (
                            <option key={category.CategoryId} value={category.CategoryId}>{category.CategoryName}</option>
                        ))}
                    </select>
                </div>
                <div className="form-group">
                    <label>Upload Image:</label>
                    <input type="file" className="form-control-file" onChange={(e) => setImageFile(e.target.files[0])} required />
                </div>
                <button type="submit" className="btn btn-primary">Add Product</button>
            </form>
        </div>
    );
}

export default AddProduct;
