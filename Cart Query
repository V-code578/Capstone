import React, { useState, useEffect } from 'react';
import { Container, Table, Button } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';

const Cart = (props) => {
    const [cartItems, setCartItems] = useState([]);
    const navigate = useNavigate();

    useEffect(() => {
        fetchCartItems();
    }, []);

    const fetchCartItems = async () => {
        try {
            const loggedInUser = sessionStorage.getItem('username');

            // Fetch cart items for the logged in user
            const cartResponse = await fetch(`https://localhost:7075/api/Cart/CartByName/${loggedInUser}`);
            const cartData = await cartResponse.json();

            setCartItems(cartData);
        } catch (error) {
            console.error('Error fetching cart items:', error);
        }
    };

    const removeFromCart = async (productId) => {
        try {
            const response = await fetch(`https://localhost:7075/api/Cart/remove?userName=${props.username}&productId=${productId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
            });
            if (response.ok) {
                console.log('Item removed from cart:', productId);
                fetchCartItems(); // Fetch updated cart items after removing
            } else {
                console.error('Failed to remove item from cart:', response.statusText);
            }
        } catch (error) {
            console.error('Error removing item from cart:', error);
        }
    };

    const checkout = async () => {
        try {
            const loggedInUser = sessionStorage.getItem('username');
            const response = await fetch(`https://localhost:7075/api/Cart/Checkout/${loggedInUser}`, {
                method: 'POST'
            });
            if (response.ok) {
                console.log('Checkout successful');
                navigate('/checkout-success'); // Navigate to checkout success page
            } else {
                console.error('Failed to checkout:', response.statusText);
            }
        } catch (error) {
            console.error('Error during checkout:', error);
        }
    };

    return (
        <Container>
            <h2 className="my-4">Cart</h2>
            {cartItems.length > 0 ? (
                <Table striped bordered hover>
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {cartItems.map((item, index) => (
                            <tr key={`${item.username}-${item.productId}-${index}`}>
                                <td><img src={`/assets/${item.image}`} alt={item.name} style={{ width: '50px', height: 'auto' }} /></td>
                                <td>{item.name}</td>
                                <td>${item.price}</td>
                                <td>
                                    <Button variant="danger" onClick={() => removeFromCart(item.productId)}>Remove</Button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </Table>
            ) : (
                <p>Your cart is empty.</p>
            )}
            <Button variant="primary" onClick={checkout}>Checkout</Button>
        </Container>
    );
};

export default Cart;
