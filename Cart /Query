import React, { useState, useEffect } from 'react';
import { Card, Button, Container, Row, Col } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';

const MensShirts = () => {
    const [products, setProducts] = useState([]);
    const navigate = useNavigate();

    useEffect(() => {
        fetchData();
    }, []);

    const fetchData = async () => {
        try {
            const response = await fetch('https://localhost:7075/api/Product/ProductByCategory/1');
            const data = await response.json();
            const updatedData = data.map(product => {
                return {
                    ...product,
                    imagePath: product.imagePath // Use the image path from the database here
                };
            });
            setProducts(updatedData);
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    };

    const addToCart = async (productId) => {
        try {
            const loggedInUser = sessionStorage.getItem('username');

            if (!loggedInUser) {
                navigate('/login'); // Navigate to login page if user is not logged in
                return;
            }

            const response = await fetch('https://localhost:7075/api/Cart/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    userName: loggedInUser,
                    productId: productId,
                    quantity: 1 // You can adjust the quantity as needed
                })
            });
            if (response.ok) {
                console.log('Product added to cart:', productId);
                navigate('/cart'); // Navigate to cart page after adding to cart
            } else {
                console.error('Failed to add product to cart:', response.statusText);
            }
        } catch (error) {
            console.error('Error adding product to cart:', error);
        }
    };

    const addToWishlist = (productId) => {
        console.log('Product added to wishlist:', productId);
    };

    return (
        <Container>
            <h2 className="my-4">Men's Shirts</h2>
            <Row>
                {products.map(product => (
                    <Col key={product.productId} md={12} className="mb-4">
                        <Card className="flex-row">
                            <Card.Img src={`/assets/${product.imagePath}`} alt={product.productName} style={{ width: '200px', height: 'auto' }} />

                            <Card.Body>
                                <Card.Title>{product.productName}</Card.Title>
                                <Card.Text>{product.description}</Card.Text>
                                <Card.Text>Price: ${product.price}</Card.Text>
                                <Button variant="primary" onClick={() => addToCart(product.productId)}>Add to Cart</Button>{' '}
                                <Button variant="secondary" onClick={() => addToWishlist(product.productId)}>Add to Wishlist</Button>
                            </Card.Body>
                        </Card>
                    </Col>
                ))}
            </Row>
        </Container>
    );
};

export default MensShirts;


import React, { useState, useEffect } from 'react';
import { Container, Table, Button } from 'react-bootstrap';

const Cart = () => {
    const [cartItems, setCartItems] = useState([]);

    useEffect(() => {
        fetchCartItems();
    }, []);

    const fetchCartItems = async () => {
        try {
            const response = await fetch('https://localhost:7075/api/Cart/CartById/username'); // Replace 'username' with the actual username
            const data = await response.json();
            setCartItems(data);
        } catch (error) {
            console.error('Error fetching cart items:', error);
        }
    };

    const handleRemoveFromCart = async (productId) => {
        try {
            await fetch(`https://localhost:7075/api/Cart/remove/username/${productId}`, {
                method: 'DELETE'
            });
            fetchCartItems();
        } catch (error) {
            console.error('Error removing item from cart:', error);
        }
    };

    const handleQuantityChange = async (event, productId) => {
        const newQuantity = event.target.value;
        // You should implement an API endpoint to update the quantity in the cart
        // This is just a placeholder to demonstrate the concept
        console.log(`Updating quantity for product ${productId} to ${newQuantity}`);
    };

    return (
        <Container>
            <h2 className="my-4">Cart</h2>
            <Table striped bordered hover>
                <thead>
                    <tr>
                        <th>Product Image</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {cartItems.map(item => (
                        <tr key={item.productId}>
                            <td><img src={`/assets/${item.imagePath}`} alt={item.productName} style={{ width: '100px', height: 'auto' }} /></td>
                            <td>{item.productName}</td>
                            <td>${item.price}</td>
                            <td>
                                <select defaultValue={item.quantity} onChange={(event) => handleQuantityChange(event, item.productId)}>
                                    {[...Array(10).keys()].map((quantity) => (
                                        <option key={quantity} value={quantity}>{quantity}</option>
                                    ))}
                                </select>
                            </td>
                            <td>
                                <Button variant="danger" onClick={() => handleRemoveFromCart(item.productId)}>Remove</Button>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </Table>
        </Container>
    );
};

export default Cart;

